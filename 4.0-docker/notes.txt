Containers

docker ps       -- Show the containers
docker ps -a    -- Show all containers
docker run <container_name>   -- Create a new container
docker run --name ubuntu_up -d ubuntu tail -f /dev/null  -- Init ubuntu that neve off
docker run --name ubuntu -d -p 80:80 ubuntu tail -f /dev/null   --  Init a ubuntu that never of with conextion to port
docker exec -it ubuntu_up bash  -- To entry a container
docker rename <old_name> <new_name>   -- To rename a container
docker rm <container_id> || </container_name>   -- To delete a container
docker stop $(docker ps -a -q)  --  Stop all running containers
docker rm $(docker ps -a -q)  --  Delete all stopped containers
docker container prune   -- Delete all container are spoted
docker run --name <any_name> hello-world    --  Give a name to  container hello-worl
docker inspect <container_id>  -- Show more about an specifict container
docker container restart <container_name>  --  Restart a container 
docker network connect <network> <container>  -- Connect a network to a container



Volumes

docker volume ls     --  List all volumes
docker volume create dbdata  --  Create a new volume
docker run -d --name db --mount src=dbdata,dst=/data/db mongo
-- Con lo anterior creamos un container y lo asignamos a un volumen al volumen dbdata


Extact documents

docker cp test.txt ubuntu_up:testing/test.log  -- Copy a file from my pc to container
docker cp ubuntu_up:/testing localtesting  -- Olso we can extract a dir o dumcent wit the revers proccesses



Images

docker image ls  -- Show all images that we are use
Dockerfile --  This is a file to create a image
docker build -t <base_image>:<tag_image_name>  <path> // docker build -t ubuntu:platzi .
docker login  -- Login to dockerHub
docker tag ubuntu:platzi estcode16/ubuntu:est1  // Rename an image 
docker push estcode14/ubuntu:est1.0 
docker rmi <id_image>  --  Delete an image
docker rmi -f <id_image>  --  Force delete
docker rmi -f $(docker images -q)  --  Delete all images


Virtual Docker Network

docker network ls  --  Show the default network of docker 
docker network create --attachable <network_name>  --  This is for create a new network
docker network connect <network_name> <container_name>  --  Connect the network to a container
docker network inspect <network_name>  --  To inspect a network
docker network prune  --  Remove all unused networks
docker network rm my-network  --  Removes one or more networks by name or identifier


Docker Compose 

docker-compose ps  --  Show the compose created
docker compose up -d  --  This is for run the docker-compose.yml and this create containers and connect each other
docker-compose logs (Allow me to see all logs)
docker-compose logs app (Just see the  log of “app”)
docker-compose logs -f app (Make a follow of log de app)
docker-compose exec app bash (eIntro to shell app container)
docker-compose ps (veo los contenedores generados por docker compose)
docker-compose down (Deleta all generated by docker compose)

docker-compose build   --  Super usefull, create image and all servicies in docker compose file
docker compose up -d  --  This is for run the docker-compose.yml and this create containers and connect each other
docker-compose build app an then  docker compose up -d   --  Upde modification in our app

docker rm -f $(docker ps -aq) -- Delete all containers
docker volume ls  -- Show all volumes
docker system prune  -- Delete all that are stoped
docker stats (veo cuantos recursos consume docker en mi sistema)
